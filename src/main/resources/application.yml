server:
  port: ${PORT:8080}
  base_url: ${BASE_URL}
spring:
  application:
    name: Zerone SocialNetwork
  messages:
    basename: lang.messages
  profiles:
    active: dev
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    url: ${JDBC_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
      dialect: org.hibernate.dialect.PostgreSQLDialect
  boot:
    admin:
      client:
        url: ${ADMIN_SERVER_URL}
        instance:
          management-base-url: https://zerone-2022-develop.herokuapp.com/
          service-base-url: ${spring.boot.admin.client.instance.management-base-url}
        auto-deregistration: true
        period: 5m
        username: ${ADMIN_NAME}
        password: ${ADMIN_PASSWORD}

mailjet:
  mail:
    from: ${MAIlJET_MAIL_FROM}
    key: ${MAIlJET_MAIL_KEY}
    secret: ${MAIlJET_MAIL_SECRET}
    version: v3.1
    email_admin: ${MAIlJET_MAIL_EMAIL_ADMIN}
  flyway:
    enabled: true
jwt:
  secret: ${JWT_SECRET}
captcha:
  width: 193
  height: 57
  image: data:captchaImage/png;base64,
  lifespanBySec: 0
cloudinary:
  cloudName: ${CLOUDINARY_CLOUD_NAME}
  apiKey: ${CLOUDINARY_API_KEY}
  apiSecret: ${CLOUDINARY_API_SECRET}
management:
  endpoints:
    web:
      base-path: ${ACTUATOR}
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

html:
  file:
    register: ./src/main/resources/messages/register.html
    recovery: ./src/main/resources/messages/recovery.html

location: src/main/resources/location/locations.xml
